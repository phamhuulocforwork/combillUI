{
  "name": "animated-tooltip",
  "type": "registry:ui",
  "registryDependencies": [],
  "dependencies": [
    "react",
    "framer-motion"
  ],
  "devDependencies": [],
  "tailwind": {},
  "cssVars": {
    "light": {},
    "dark": {}
  },
  "files": [
    {
      "path": "animated-tooltip.tsx",
      "content": "\"use client\";\r\n\r\nimport * as React from \"react\";\r\n\r\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\";\r\nimport { motion, useMotionValue, useSpring, useTransform } from \"framer-motion\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nconst AnimatedTooltipProvider = TooltipPrimitive.Provider;\r\nconst AnimatedTooltip = TooltipPrimitive.Root;\r\nconst AnimatedTooltipTrigger = TooltipPrimitive.Trigger;\r\n\r\nconst springConfig = { stiffness: 100, damping: 5 };\r\n\r\nconst AnimatedTooltipContent = React.forwardRef<\r\n  React.ElementRef<typeof TooltipPrimitive.Content>,\r\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\r\n>(({ className, sideOffset = 4, ...props }, ref) => {\r\n  const x = useMotionValue(0);\r\n  const rotate = useSpring(\r\n    useTransform(x, [-100, 100], [-45, 45]),\r\n    springConfig,\r\n  );\r\n  const translateX = useSpring(\r\n    useTransform(x, [-100, 100], [-50, 50]),\r\n    springConfig,\r\n  );\r\n\r\n  const handleMouseMove = (event: any) => {\r\n    const halfWidth = event.currentTarget.offsetWidth / 2;\r\n    x.set(event.nativeEvent.offsetX - halfWidth);\r\n  };\r\n\r\n  return (\r\n    <TooltipPrimitive.Portal>\r\n      <TooltipPrimitive.Content ref={ref} sideOffset={sideOffset} {...props}>\r\n        <motion.div\r\n          onMouseMove={handleMouseMove}\r\n          initial={{ opacity: 0, y: 20, scale: 0.6 }}\r\n          animate={{\r\n            opacity: 1,\r\n            y: 0,\r\n            scale: 1,\r\n            transition: {\r\n              type: \"spring\",\r\n              stiffness: 260,\r\n              damping: 10,\r\n            },\r\n          }}\r\n          exit={{ opacity: 0, y: 20, scale: 0.6 }}\r\n          style={{\r\n            translateX: translateX,\r\n            rotate: rotate,\r\n          }}\r\n          className={cn(\r\n            \"flex flex-col items-center justify-center rounded-md z-50 shadow-xl bg-primary px-3 py-1.5 text-primary-foreground \",\r\n            className,\r\n          )}\r\n        >\r\n          {props.children}\r\n        </motion.div>\r\n      </TooltipPrimitive.Content>\r\n    </TooltipPrimitive.Portal>\r\n  );\r\n});\r\nAnimatedTooltipContent.displayName = TooltipPrimitive.Content.displayName;\r\n\r\nexport {\r\n  AnimatedTooltip,\r\n  AnimatedTooltipTrigger,\r\n  AnimatedTooltipContent,\r\n  AnimatedTooltipProvider,\r\n};\r\n",
      "type": "registry:ui"
    }
  ]
}