{
  "name": "range-slider",
  "type": "registry:ui",
  "registryDependencies": [],
  "dependencies": [
    "react"
  ],
  "devDependencies": [],
  "tailwind": {},
  "cssVars": {
    "light": {},
    "dark": {}
  },
  "files": [
    {
      "path": "range-slider.tsx",
      "content": "\"use client\";\n\nimport * as React from \"react\";\n\nimport * as SliderPrimitive from \"@radix-ui/react-slider\";\n\nimport { cn } from \"@/lib/utils\";\n\ninterface RangeSliderProps\n  extends React.ComponentProps<typeof SliderPrimitive.Root> {\n  labelPosition?: \"top\" | \"bottom\";\n  label?: (value: number | undefined) => React.ReactNode;\n  orientation?: \"horizontal\" | \"vertical\";\n}\n\nconst RangeSlider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  RangeSliderProps\n>(\n  (\n    {\n      className,\n      label,\n      labelPosition = \"top\",\n      orientation = \"horizontal\",\n      ...props\n    },\n    ref,\n  ) => {\n    const initialValue = Array.isArray(props.value)\n      ? props.value\n      : [props.min, props.max];\n\n    return (\n      <SliderPrimitive.Root\n        ref={ref}\n        orientation={orientation}\n        className={cn(\n          orientation === \"horizontal\"\n            ? \"relative flex w-full touch-none select-none items-center\"\n            : \"relative flex h-full min-h-[200px] touch-none select-none flex-col items-center\",\n          className,\n        )}\n        {...props}\n      >\n        <SliderPrimitive.Track\n          className={cn(\n            orientation === \"horizontal\"\n              ? \"relative h-2 w-full grow overflow-hidden rounded-full bg-secondary\"\n              : \"relative w-2 h-full grow overflow-hidden rounded-full bg-secondary\",\n          )}\n        >\n          <SliderPrimitive.Range\n            className={cn(\n              orientation === \"horizontal\"\n                ? \"absolute h-full bg-primary\"\n                : \"absolute w-full bg-primary\",\n            )}\n          />\n        </SliderPrimitive.Track>\n        {initialValue.map((value, index) => (\n          <React.Fragment key={index}>\n            <SliderPrimitive.Thumb\n              className={cn(\n                \"relative block border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\",\n                orientation === \"horizontal\"\n                  ? \"h-5 w-2 rounded-sm\"\n                  : \"h-2 w-5 rounded-sm\",\n              )}\n            >\n              {label && (\n                <span\n                  className={cn(\n                    \"absolute flex text-xs justify-center font-medium\",\n                    orientation === \"horizontal\"\n                      ? labelPosition === \"top\"\n                        ? \"-left-2 -top-5\"\n                        : \"-left-2 top-5\"\n                      : labelPosition === \"top\"\n                        ? \"-translate-x-full -translate-y-1/2 -left-2\"\n                        : \"translate-x-full -translate-y-1/2\",\n                  )}\n                >\n                  {label(value)}\n                </span>\n              )}\n            </SliderPrimitive.Thumb>\n          </React.Fragment>\n        ))}\n      </SliderPrimitive.Root>\n    );\n  },\n);\nRangeSlider.displayName = \"RangeSlider\";\n\nexport { RangeSlider };\n",
      "type": "registry:ui"
    }
  ]
}